
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.superiorstructures.init;

import net.neoforged.neoforge.registries.DeferredRegister;
import net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent;
import net.neoforged.fml.common.EventBusSubscriber;
import net.neoforged.bus.api.SubscribeEvent;

import net.minecraft.world.item.CreativeModeTabs;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.core.registries.Registries;

import net.mcreator.superiorstructures.SuperiorstructuresMod;

@EventBusSubscriber(bus = EventBusSubscriber.Bus.MOD)
public class SuperiorstructuresModTabs {
	public static final DeferredRegister<CreativeModeTab> REGISTRY = DeferredRegister.create(Registries.CREATIVE_MODE_TAB, SuperiorstructuresMod.MODID);

	@SubscribeEvent
	public static void buildTabContentsVanilla(BuildCreativeModeTabContentsEvent tabData) {
		if (tabData.getTabKey() == CreativeModeTabs.BUILDING_BLOCKS) {

			tabData.accept(SuperiorstructuresModBlocks.PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.STONE_RUBBLE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BLACKSTONE_RUBBLE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.NETHER_RUBBLE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DEEPSLATE_RUBBLE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CRACKED_END_STONE_BRICKS.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.PRISMARINE_PILLAR.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.POLISHED_PRISMARINE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.POLISHED_TUFF_SLAB.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CRACKED_TUFF_BRICKS.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MOSSY_PRISMARINE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MOSSY_PRISMARINE_BRICKS.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MOSSY_TUFF_BRICKS.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.GOLDEN_GRATE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.IRON_GRATE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.GOLDEN_BARS.get().asItem());

		} else if (tabData.getTabKey() == CreativeModeTabs.FUNCTIONAL_BLOCKS) {

			tabData.accept(SuperiorstructuresModBlocks.GOLDEN_TRAPDOOR.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.GOLDEN_DOOR.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.EMPTY_FLOWER_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.POWER_CORE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ARTIFICERY_TABLE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SPIKESTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.RUNESTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.GRIMSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMASHSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SOULSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DORMANT_BEAMSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.JAWSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ENDERPORTER_WHITE.get().asItem());
			tabData.accept(SuperiorstructuresModItems.WARP_CHIP_WHITE.get());
			tabData.accept(SuperiorstructuresModBlocks.DORMANT_FLAMESTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TETHER.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SENTINEL.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MYSTIC_GRIMSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SINGING_SAND.get().asItem());

		} else if (tabData.getTabKey() == CreativeModeTabs.REDSTONE_BLOCKS) {

			tabData.accept(SuperiorstructuresModBlocks.COPPER_PIPE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SLOW_CONVEYOR.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MEDIUM_CONVEYOR.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.FAST_CONVEYOR.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BLOCK_OF_BROKEN_MACHINERY.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BLOCK_OF_OLD_MACHINERY.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BLOCK_OF_GILDED_MACHINERY.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BLOCK_OF_ANCIENT_MACHINERY.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BLOCK_OF_STRANGE_MACHINERY.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ENDORITE_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ENDORITE_MESH.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ENDORITE_CORE.get().asItem());
			tabData.accept(SuperiorstructuresModItems.TRANSPONDER.get());
			tabData.accept(SuperiorstructuresModBlocks.PLONKER.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MUNCHER.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DEACTIVATED_FAN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ENDORITE_TILES.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ENDORITE_MEMBRANE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LIGHTNING_COIL.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ANCIENT_LIGHTNING_COIL.get().asItem());

		} else if (tabData.getTabKey() == CreativeModeTabs.COMBAT) {

			tabData.accept(SuperiorstructuresModItems.EXPOSED_COPPER_DAGGER.get());
			tabData.accept(SuperiorstructuresModItems.WEATHERED_COPPER_DAGGER.get());
			tabData.accept(SuperiorstructuresModItems.OXIDIZED_COPPER_DAGGER.get());
			tabData.accept(SuperiorstructuresModItems.PRISMATIC_DAGGER.get());
			tabData.accept(SuperiorstructuresModItems.LIGHTNING_DAGGER.get());
			tabData.accept(SuperiorstructuresModItems.COPPERDAGGER.get());
			tabData.accept(SuperiorstructuresModItems.AMETHYSTDAGGER.get());
			tabData.accept(SuperiorstructuresModItems.BOOSTER_UNPOWERED_CHESTPLATE.get());
			tabData.accept(SuperiorstructuresModItems.BOOSTER_UNPOWERED_BOOTS.get());
			tabData.accept(SuperiorstructuresModItems.BOOSTER_2_UNPOWERED_CHESTPLATE.get());
			tabData.accept(SuperiorstructuresModItems.BOOSTER_2_UNPOWERED_BOOTS.get());
			tabData.accept(SuperiorstructuresModItems.BOOSTER_3_UNPOWERED_CHESTPLATE.get());
			tabData.accept(SuperiorstructuresModItems.BOOSTER_3_UNPOWERED_BOOTS.get());
			tabData.accept(SuperiorstructuresModItems.PHASE_HELMET.get());
			tabData.accept(SuperiorstructuresModItems.PHASE_CHESTPLATE.get());
			tabData.accept(SuperiorstructuresModItems.PHASE_BOOTS.get());
			tabData.accept(SuperiorstructuresModItems.ENERGY_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.FROST_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.FLAME_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.BOLT_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.WARP_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_ENERGY_RAIL_1.get());
			tabData.accept(SuperiorstructuresModItems.BIG_ENERGY_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.BIG_FLAME_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.BIG_FROST_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.BIG_WARP_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.BIG_BOLT_CATALYST.get());
			tabData.accept(SuperiorstructuresModItems.COPPER_SPEAR.get());
			tabData.accept(SuperiorstructuresModItems.EXPOSED_COPPER_SPEAR.get());
			tabData.accept(SuperiorstructuresModItems.WEATHERED_COPPER_SPEAR.get());
			tabData.accept(SuperiorstructuresModItems.OXIDIZED_COPPER_SPEAR.get());
			tabData.accept(SuperiorstructuresModItems.AMETHYST_SPEARS.get());
			tabData.accept(SuperiorstructuresModItems.LIGHTNING_SPEAR.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_ENERGY_BLASTER_1.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_ENERGY_BLASTER_2.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_ENERGY_BLASTER_3.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FLAME_BLASTER_1.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FLAME_BLASTER_2.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FLAME_BLASTER_3.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FROST_BLASTER_1.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FROST_BLASTER_2.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FROST_BLASTER_3.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_BOLT_BLASTER_1.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_BOLT_BLASTER_2.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_BOLT_BLASTER_3.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_PHASE_BLASTER_1.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_PHASE_BLASTER_2.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_PHASE_BLASTER_3.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_ENERGY_RAIL_2.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FROST_RAIL_1.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FROST_RAIL_2.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FLAME_RAIL_1.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_FLAME_RAIL_2.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_BOLT_RAIL_1.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_PONGORMA_RAIL_1.get());
			tabData.accept(SuperiorstructuresModItems.CHAKRAM.get());
			tabData.accept(SuperiorstructuresModItems.STAR_DAGGER.get());

		} else if (tabData.getTabKey() == CreativeModeTabs.SPAWN_EGGS) {

			tabData.accept(SuperiorstructuresModItems.BROKEN_IRON_GOLEM_SPAWN_EGG.get());
			tabData.accept(SuperiorstructuresModItems.COPPER_GOLEM_SPAWN_EGG.get());
			tabData.accept(SuperiorstructuresModItems.ANCIENT_COPPER_GOLEM_SPAWN_EGG.get());
			tabData.accept(SuperiorstructuresModItems.GOLDEN_GOLEM_SPAWN_EGG.get());
			tabData.accept(SuperiorstructuresModItems.BROKEN_GOLDEN_GOLEM_SPAWN_EGG.get());
			tabData.accept(SuperiorstructuresModItems.CREEPLET_SPAWN_EGG.get());
			tabData.accept(SuperiorstructuresModItems.GRAZER_SPAWN_EGG.get());
			tabData.accept(SuperiorstructuresModItems.ACOLYTE_SPAWN_EGG.get());
			tabData.accept(SuperiorstructuresModItems.HOLLOW_SPAWN_EGG.get());
			tabData.accept(SuperiorstructuresModItems.FILL_WAND.get());
			tabData.accept(SuperiorstructuresModItems.VOID_WAND.get());
			tabData.accept(SuperiorstructuresModItems.CLONE_WAND.get());
			tabData.accept(SuperiorstructuresModItems.FLOOD_WAND.get());
			tabData.accept(SuperiorstructuresModItems.FLAVOR_WAND.get());
			tabData.accept(SuperiorstructuresModItems.AIR_WAND.get());
			tabData.accept(SuperiorstructuresModBlocks.FLAVORBLOCK.get().asItem());

		} else if (tabData.getTabKey() == CreativeModeTabs.INGREDIENTS) {

			tabData.accept(SuperiorstructuresModItems.CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.RED_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.ORANGE_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.YELLOW_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.LIME_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.GREEN_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.LIGHT_BLUE_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.CYAN_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.BLUE_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.PINK_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.MAGENTA_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.PURPLE_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.BROWN_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.WHITE_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.LIGHT_GRAY_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.DARK_GRAY_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.BLACK_CERAMIC_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_2.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_MOOG_CITY.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_INTRO.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_WAIT.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_KYOTO.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_FAR.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_BLOCKS.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_CAT.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_13.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_11.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_WARD.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_STAL.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_STRAD.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_MALL.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_MELLOHI.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_CHIRP.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_PIGSTEP.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_OTHERSIDE.get());
			tabData.accept(SuperiorstructuresModItems.GEODE.get());
			tabData.accept(SuperiorstructuresModItems.COPPER_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.IRON_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.GOLD_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.EMERALD_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.QUARTZ_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.AMETHYST_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.LAPIS_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.DIAMOND_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.REDSTONE_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_COPPER_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_IRON_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_GOLD_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_EMERALD_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_QUARTZ_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_AMETHYST_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_LAPIS_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_DIAMOND_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.BIG_REDSTONE_GEODE.get());
			tabData.accept(SuperiorstructuresModItems.PORCELAIN_TILE.get());
			tabData.accept(SuperiorstructuresModItems.VESSEL_PIECE.get());
			tabData.accept(SuperiorstructuresModItems.LIGHTNING_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.LIGHTNING_CHARGE.get());
			tabData.accept(SuperiorstructuresModItems.FROST_CHARGE.get());
			tabData.accept(SuperiorstructuresModItems.BROKEN_MACHINERY.get());
			tabData.accept(SuperiorstructuresModItems.OLD_MACHINERY.get());
			tabData.accept(SuperiorstructuresModItems.GILDED_MACHINERY.get());
			tabData.accept(SuperiorstructuresModItems.ANCIENT_MACHINERY.get());
			tabData.accept(SuperiorstructuresModItems.STRANGE_MACHINERY.get());
			tabData.accept(SuperiorstructuresModItems.RAW_ENDORITE.get());
			tabData.accept(SuperiorstructuresModItems.ENDORITE_INGOT.get());
			tabData.accept(SuperiorstructuresModItems.ELYTRON_SHARD.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_RELIC.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_SPIDERS.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_DIAMOND.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_MOOG_SPACE.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_MINECRAFT.get());
			tabData.accept(SuperiorstructuresModItems.BRITTLE_CARAPACE.get());
			tabData.accept(SuperiorstructuresModBlocks.HEART_OF_THE_INFERNO.get().asItem());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_ELEGY.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_CREATOR.get());
			tabData.accept(SuperiorstructuresModItems.DISC_FRAGMENT_CREATOR_MUSIC_BOX.get());
			tabData.accept(SuperiorstructuresModItems.CURSED_KEY.get());
			tabData.accept(SuperiorstructuresModItems.OMINOUS_CURSED_KEY.get());
			tabData.accept(SuperiorstructuresModItems.PRISMATIC_KEY.get());
			tabData.accept(SuperiorstructuresModItems.OMINOUS_PRISMATIC_KEY.get());
			tabData.accept(SuperiorstructuresModItems.MANGLED_KEY.get());
			tabData.accept(SuperiorstructuresModItems.OMINOUS_MANGLED_KEY.get());

		} else if (tabData.getTabKey() == CreativeModeTabs.COLORED_BLOCKS) {

			tabData.accept(SuperiorstructuresModBlocks.SMALL_RED_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_RED_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_RED_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_ORANGE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_ORANGE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_ORANGE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_YELLOW_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_YELLOW_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_YELLOW_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_LIME_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_LIME_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_LIME_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_GREEN_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_GREEN_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_GREEN_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_LIGHT_BLUE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_LIGHT_BLUE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_LIGHT_BLUE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_CYAN_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_CYAN_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_CYAN_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_BLUE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_BLUE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_BLUE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_PINK_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_PINK_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_PINK_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_MAGENTA_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_MAGENTA_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_MAGENTA_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_PURPLE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_PURPLE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_PURPLE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_BROWN_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_BROWN_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_BROWN_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_WHITE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_WHITE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_WHITE_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_LIGHT_GRAY_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_LIGHT_GRAY_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_LIGHT_GRAY_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_DARK_GRAY_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_DARK_GRAY_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_DARK_GRAY_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_BLACK_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_BLACK_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_BLACK_POT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.RED_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ORANGE_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.YELLOW_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LIME_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.GREEN_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CYAN_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LIGHT_BLUE_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BLUE_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.PINK_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.PURPLE_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MAGENTA_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BROWN_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LIGHT_GRAY_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DARK_GRAY_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BLACK_PORCELAIN_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_RED_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_RED_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_RED_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_ORANGE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_ORANGE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_ORANGE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_YELLOW_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_YELLOW_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_YELLOW_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_LIME_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_LIME_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_LIME_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_GREEN_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_GREEN_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_GREEN_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_CYAN_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_CYAN_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_CYAN_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_LIGHT_BLUE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_LIGHT_BLUE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_LIGHT_BLUE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_BLUE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_BLUE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_BLUE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_PURPLE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_PURPLE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_PURPLE_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_MAGENTA_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_MAGENTA_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_MAGENTA_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_PINK_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_PINK_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_PINK_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_BROWN_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_BROWN_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_BROWN_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_LIGHT_GRAY_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_LIGHT_GRAY_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_LIGHT_GRAY_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_DARK_GRAY_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_DARK_GRAY_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_DARK_GRAY_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMALL_BLACK_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TALL_BLACK_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LARGE_BLACK_VASE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_RED_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_ORANGE_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_YELLOW_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_LIME_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_GREEN_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_CYAN_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_LIGHT_BLUE_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_BLUE_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_PINK_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_PURPLE_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_MAGENTA_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_BROWN_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_LIGHT_GRAY_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_DARK_GRAY_PORCELAIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHISELED_BLACK_PORCELAIN.get().asItem());

		} else if (tabData.getTabKey() == CreativeModeTabs.TOOLS_AND_UTILITIES) {

			tabData.accept(SuperiorstructuresModItems.TWO.get());
			tabData.accept(SuperiorstructuresModItems.MOOG_CITY.get());
			tabData.accept(SuperiorstructuresModItems.DROOPY_P_1.get());
			tabData.accept(SuperiorstructuresModItems.DROOPY_P_2.get());
			tabData.accept(SuperiorstructuresModItems.DROOPY.get());
			tabData.accept(SuperiorstructuresModItems.KYOTO.get());
			tabData.accept(SuperiorstructuresModItems.INTRO.get());
			tabData.accept(SuperiorstructuresModItems.ELEVEN_REPAIRED.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_RESTORATION.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_LEAGUES.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_DUAT.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_REJUVENATION.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_VISION.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_POWER.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_HURDLING.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_ABZU.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_LEVITATION.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_VENOM.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_INFLICTION.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_BINDING.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_FORTITUDE.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_VANISHING.get());
			tabData.accept(SuperiorstructuresModItems.POWER_CELL.get());
			tabData.accept(SuperiorstructuresModItems.WRENCH.get());
			tabData.accept(SuperiorstructuresModItems.CHARGER.get());
			tabData.accept(SuperiorstructuresModItems.COPPER_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.EXPOSED_COPPER_BRUSH.get());
			tabData.accept(SuperiorstructuresModItems.WEATHERED_COPPER_BRUSH.get());
			tabData.accept(SuperiorstructuresModItems.OXIDIZED_COPPER_BRUSH.get());
			tabData.accept(SuperiorstructuresModItems.SINKING_SAND_BUCKET.get());
			tabData.accept(SuperiorstructuresModItems.DEACTIVATED_HOOKSHOT.get());
			tabData.accept(SuperiorstructuresModItems.WARPSHOT.get());
			tabData.accept(SuperiorstructuresModItems.IRON_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.EMERALD_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.QUARTZ_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.GOLD_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.LAPIS_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.REDSTONE_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.DIAMOND_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.NETHERITE_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.ENDORITE_ORE_DETECTOR.get());
			tabData.accept(SuperiorstructuresModItems.POWER_DRILL_1.get());
			tabData.accept(SuperiorstructuresModItems.POWER_DRILL_2.get());
			tabData.accept(SuperiorstructuresModItems.POWER_DRILL_3.get());
			tabData.accept(SuperiorstructuresModItems.POWER_SAW_1.get());
			tabData.accept(SuperiorstructuresModItems.POWER_SAW_2.get());
			tabData.accept(SuperiorstructuresModItems.POWER_SAW_3.get());
			tabData.accept(SuperiorstructuresModItems.SOUL_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.AMP_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.TOTEM_OF_OBLIVION.get());
			tabData.accept(SuperiorstructuresModItems.SUN_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.MOON_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.SHELL_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.SCUTE_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.PLUME_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.SCORCH_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.FROST_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.SKULL_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.CREEP_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.STAR_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.WARD_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.GRAVITY_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.PAW_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.MUDDLE_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.DAWN_TRINKET.get());
			tabData.accept(SuperiorstructuresModItems.FLAME_CELL.get());
			tabData.accept(SuperiorstructuresModItems.FROST_CELL.get());
			tabData.accept(SuperiorstructuresModItems.BOLT_CELL.get());
			tabData.accept(SuperiorstructuresModItems.MOOG_IN_SPACE.get());
			tabData.accept(SuperiorstructuresModItems.DIAMOND_DISC.get());
			tabData.accept(SuperiorstructuresModItems.BALLAD_OF_SPIDERS.get());
			tabData.accept(SuperiorstructuresModItems.MINECRAFT_DISC.get());
			tabData.accept(SuperiorstructuresModItems.ESSENCE_BUCKET.get());
			tabData.accept(SuperiorstructuresModItems.GAUNTLET.get());
			tabData.accept(SuperiorstructuresModItems.PHASE_GAUNTLET.get());
			tabData.accept(SuperiorstructuresModItems.ELEGY.get());
			tabData.accept(SuperiorstructuresModItems.FRANKLIN_TRINKET.get());

		} else if (tabData.getTabKey() == CreativeModeTabs.NATURAL_BLOCKS) {

			tabData.accept(SuperiorstructuresModBlocks.POISON_IVY.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.FULGURITE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LICHEN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BRAMBLE_BLOCK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BRAMBLES.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.STARTLED_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DERPY_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.GRINNING_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SNARLING_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CREEPY_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SKELETAL_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.HEADY_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.WITHERING_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SHOCKING_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.WATCHFUL_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CRYSTALLINE_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SPOOK_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DERP_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMIRK_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SNEER_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CREEP_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SKULL_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.HEAD_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DOOM_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ZAP_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHRIS_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.WATCH_O_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SUSPICIOUS_DIRT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ANCIENT_SUSPICIOUS_DIRT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.GRAVE_SUSPICIOUS_DIRT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.LUSH_SUSPICIOUS_DIRT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.TOWN_SUSPICIOUS_DIRT.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SUSPICIOUS_NETHERRACK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.FORTRESS_NETHERRACK.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SUSPICIOUS_BLACKSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SUSPICIOUS_STONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MINER_STONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SUSPICIOUS_SAND.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.PYRAMID_SAND.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.STARTLED_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DERPY_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.GRINNING_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SNARLING_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CREEPY_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SKELETAL_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.HEADY_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.WITHERING_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SHOCKING_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.WATCHFUL_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CRYSTALLINE_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MELON_LANTERN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SPOOK_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DERP_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SMIRK_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SNEER_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CREEP_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SKULL_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.HEAD_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DOOM_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.ZAP_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CHRIS_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.WATCH_O_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SUSPICIOUS_GRAVEL.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SUSPICIOUS_DEEPSLATE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.END_IRON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SUSPICIOUS_ENDSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.INFESTED_SANDSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.INFESTED_CUT_SANDSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.INFESTED_CHISELED_SANDSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.VERTABRAE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SUSPICIOUS_CITY_ENDSTONE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.MOSSY_TUFF.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.SOUL_BULB.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.BLUE_ROSE.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.CELESTIAL_GOURD.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.COSMELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.STARRY_CARVED_PUMPKIN.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.STARRY_CARVED_MELON.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.AMNESOCLAST.get().asItem());
			tabData.accept(SuperiorstructuresModBlocks.DORMANT_ICONOCLAST.get().asItem());

		} else if (tabData.getTabKey() == CreativeModeTabs.FOOD_AND_DRINKS) {

			tabData.accept(SuperiorstructuresModItems.INSECT_FLESH.get());

		}
	}
}
